openapi: 3.1.0
info:
  description: APIs for managing users in Zag Systems.
  title: User Management API
  version: 1.0.0
servers:
- url: http://localhost:8000/
paths:
  /addUser:
    post:
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Successfully registered user
        "400":
          description: Invalid input data
        "500":
          description: Internal server error
      summary: Register a new user
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: User
  /updateUser:
    put:
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Successfully updated user
        "400":
          description: Invalid input data
        "404":
          description: User not found
        "500":
          description: Internal server error
      summary: Update an existing user
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: User
  /deleteUser/{id}:
    delete:
      operationId: deleteUser
      parameters:
      - description: The ID of the user to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted user
        "404":
          description: User not found
        "500":
          description: Internal server error
      summary: Delete a user
      tags:
      - User
      x-accepts:
      - application/json
      x-tags:
      - tag: User
  /getAllUsers:
    get:
      operationId: getAllUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserResponse'
                type: array
          description: A list of all users
        "500":
          description: Internal server error
      summary: Retrieve all users
      tags:
      - User
      x-accepts:
      - application/json
      x-tags:
      - tag: User
  /getUserById/{id}:
    get:
      operationId: getUserById
      parameters:
      - description: The unique ID of the user
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: User details retrieved successfully
        "404":
          description: User not found
        "500":
          description: Internal server error
      summary: Retrieve user details by ID
      tags:
      - User
      x-accepts:
      - application/json
      x-tags:
      - tag: User
components:
  schemas:
    User:
      example:
        password: password
        role: role
        gender: gender
        mobileNumber: mobileNumber
        fullName: fullName
        userName: userName
        email: email
        status: ACTIVE
      properties:
        userName:
          description: The username of the user
          type: string
        password:
          description: The password for the user
          type: string
        email:
          description: The email address of the user
          format: email
          type: string
        fullName:
          description: The full name of the user
          type: string
        mobileNumber:
          description: The mobile number of the user
          type: string
        role:
          description: The role assigned to the user
          type: string
        gender:
          description: "The gender of the user (e.g., Male, Female, Other)"
          type: string
        status:
          description: The status of the user account
          enum:
          - ACTIVE
          - INACTIVE
          type: string
      required:
      - email
      - fullName
      - gender
      - mobileNumber
      - password
      - role
      - status
      - userName
    UserUpdate:
      example:
        password: password
        role: role
        mobileNumber: mobileNumber
        id: 0
        userName: userName
        email: email
        status: ACTIVE
      properties:
        id:
          description: The unique ID of the user
          type: integer
        userName:
          description: The username of the user
          type: string
        email:
          description: The email address of the user
          format: email
          type: string
        password:
          description: The updated password for the user
          type: string
        mobileNumber:
          description: The updated mobile number of the user
          type: string
        role:
          description: The updated role of the user
          type: string
        status:
          description: The updated status of the user account
          enum:
          - ACTIVE
          - INACTIVE
          type: string
      required:
      - email
      - id
      - mobileNumber
      - password
      - role
      - status
      - userName
    UserResponse:
      example:
        role: role
        gender: gender
        mobileNumber: mobileNumber
        fullName: fullName
        id: 0
        userName: userName
        email: email
        status: ACTIVE
      properties:
        id:
          description: The unique ID of the user
          type: integer
        userName:
          description: The username of the user
          type: string
        email:
          description: The email address of the user
          format: email
          type: string
        fullName:
          description: The full name of the user
          type: string
        mobileNumber:
          description: The mobile number of the user
          type: string
        role:
          description: The role of the user
          type: string
        gender:
          description: The gender of the user
          type: string
        status:
          description: The account status of the user
          enum:
          - ACTIVE
          - INACTIVE
          type: string
      required:
      - email
      - fullName
      - gender
      - id
      - mobileNumber
      - role
      - status
      - userName
